import{b4 as v,b5 as t,b6 as g,b7 as I,b8 as u,b9 as m,ba as i,bb as b,bc as y}from"./index.d9beb1c5.js";import{E as n}from"./errortype.28c52496.js";const C=v("provider",{state:()=>({providers:[],error:null,isLoading:!1,storeId:""}),actions:{async loadProviders(r){this.storeId=r,this.providers=[],this.isLoading=!0;const o=t(i,"providers"),s=g(o,I("storeId","==",r)),a=await u(s);this.providers=a.docs.map(function(e){var d,c,h,p,l;return{id:e.id,name:(d=e.data())==null?void 0:d.name,phone:(c=e.data())==null?void 0:c.phone,email:(h=e.data())==null?void 0:h.email,storeId:(p=e.data())==null?void 0:p.storeId,lastChangeUserId:(l=e.data())==null?void 0:l.lastChangeUserId}}),this.isLoading=!1},async addProvider(r){try{const o=m(t(i,"providers"));r.id=o.id,await b(o,r),this.providers.push(r)}catch(o){throw{productReference:r.name,errorType:n.Technical,message:o.toString()}}},async editProvider(r){try{const o=m(t(i,"providers"),r.id);await y(o,{name:r.name,email:r.email,phone:r.phone,lastChangeUserId:r.lastChangeUserId});const s=this.providers.findIndex(e=>e.id===r.id&&e.storeId===r.storeId);if(s<0)throw{providerName:r.id,errorType:n.Technical,message:"providerStore.editProvider : cannot find provider in store to edit it"};const a=this.providers[s];a.name=r.name,a.email=r.email,a.phone=r.phone,a.lastChangeUserId=r.lastChangeUserId}catch(o){throw{providerName:r.id,errorType:n.Technical,message:o.toString()}}}}});export{C as u};
