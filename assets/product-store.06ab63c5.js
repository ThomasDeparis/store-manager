import{ai as m}from"./index.44d67d2d.js";import{E as a}from"./errortype.037c0a40.js";import{c as n,q as f,w as l,g as h,d,a as c,s as w,b as E,e as P,f as R}from"./user-store.6337866a.js";var y=(e=>(e[e.ReferenceExists=0]="ReferenceExists",e))(y||{});const T=m("product",{state:()=>({products:[],error:null,isLoading:!1,storeId:""}),actions:{async loadProducts(e){this.storeId=e,this.products=[],this.isLoading=!0;const s=n(c,"products"),t=f(s,l("storeId","==",e)),o=await h(t);this.products=o.docs.map(function(r){return{id:r.id,name:r.data().name,quantity:r.data().quantity,sellPrice:r.data().sellPrice,reference:r.data().reference,providerReference:r.data().providerReference,storeId:r.data().storeId,lastChangeUserId:r.data().lastChangeUserId}}),this.isLoading=!1},async referenceExists(e,s){const t=n(c,"products"),o=f(t,l("storeId","==",e),l("reference","==",s));return!(await h(o)).empty},async addProduct(e){if(await this.referenceExists(e.storeId,e.reference))throw{messageKey:y.ReferenceExists,productReference:e.reference,errorType:a.Business};try{const t=d(n(c,"products"));e.id=t.id,await w(t,e),this.products.push(e)}catch(t){throw{productReference:e.reference,errorType:a.Technical,message:t.toString()}}},async editProduct(e){try{const s=d(n(c,"products"),e.id);await E(s,{name:e.name,providerReference:e.providerReference,sellPrice:e.sellPrice,lastChangeUserId:e.lastChangeUserId});const t=this.products.findIndex(r=>r.id===e.id&&r.storeId===e.storeId);if(t<0)throw{productReference:e.reference,errorType:a.Technical,message:"productStore.editProduct : cannot find product in store to edit it"};console.log(e),console.log(e.sellPrice);const o=this.products[t];o.name=e.name,o.providerReference=e.providerReference,o.sellPrice=e.sellPrice,o.lastChangeUserId=e.lastChangeUserId}catch(s){throw{productReference:e.reference,errorType:a.Technical,message:s.toString()}}},async updateStock(e,s,t){var o;try{const r=d(c,"products",e),i=await P(r),u=t||R(c),p=d(n(c,"products",e,"stockLogs"));s.id=p.id,s.initialQuantity=Number(((o=i==null?void 0:i.data())==null?void 0:o.quantity)||0),u.set(p,s);const g=(s.initialQuantity||0)+s.adjustment;u.update(r,{quantity:g}),t===void 0&&(console.log("commit update stock"),await u.commit())}catch(r){throw{productReference:e,errorType:a.Technical,message:r.toString()}}}}});export{y as P,T as u};
